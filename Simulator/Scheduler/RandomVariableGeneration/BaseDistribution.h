//## begin module%1.3%.codegen_version preserve=yes
//   Read the documentation to learn more about C++ code generator
//   versioning.
//## end module%1.3%.codegen_version

//## begin module%36B1909403BA.cm preserve=no
//	  %X% %Q% %Z% %W%
//## end module%36B1909403BA.cm

//## begin module%36B1909403BA.cp preserve=yes
//	********************************************************************************
//
//	Copyright: Nortel Networks 1999
//
//	Classification: Confidential
//
//	Project Name: RRM Simulator / Scheduler
//
//	Package: Random Variable Generation
//
//	File Name: BaseDistribution.h
//
//	Description: Header file for the BaseDistribution class
//
//	Author: Rosangela Pieroni
//
//	Creation Date: Apr/16/1999
//
//	Visual Source Safe $Revision: 2 $
//
//	Last check in $Date: 17/05/99 8:59 $
//
//	********************************************************************************
//## end module%36B1909403BA.cp

//## Module: BaseDistribution%36B1909403BA; Pseudo Package specification
//## Source file: T:\RandomVariableGeneration\BaseDistribution.h

#ifndef BaseDistribution_h
#define BaseDistribution_h 1

//## begin module%36B1909403BA.additionalIncludes preserve=no
#include "SchTypes.h"
#include "SchException.h"
//## end module%36B1909403BA.additionalIncludes

//## begin module%36B1909403BA.includes preserve=yes
//## end module%36B1909403BA.includes

// BaseGen
#include "BaseGen.h"
//## begin module%36B1909403BA.additionalDeclarations preserve=yes
namespace sch {
//## end module%36B1909403BA.additionalDeclarations


//## begin BaseDistribution%36B1909403BA.preface preserve=yes
//## end BaseDistribution%36B1909403BA.preface

//## Class: BaseDistribution%36B1909403BA; Abstract
//	********************************************************************************
//
//	All random numbers are generated by first generating an uniform random number and then applying the algorithm for a particular
//	distribution.
//
//	This abstract class models that common behavior.
//
//	********************************************************************************
//## Category: RandomVariableGeneration%369E33C50099
//## Persistence: Transient
//## Cardinality/Multiplicity: n

class BaseDistribution 
{
  //## begin BaseDistribution%36B1909403BA.initialDeclarations preserve=yes
  //## end BaseDistribution%36B1909403BA.initialDeclarations

  public:
    //## Destructor (specified)
      //## Operation: ~BaseDistribution%36E949740334
      virtual ~BaseDistribution ();

    // Additional Public Declarations
      //## begin BaseDistribution%36B1909403BA.public preserve=yes
      //## end BaseDistribution%36B1909403BA.public

  protected:
    //## Constructors (specified)
      //## Operation: BaseDistribution%3736EAB002D3
      BaseDistribution ();

      //## Operation: BaseDistribution%36E948F8017D
      BaseDistribution (Ulong seed, Float minVal = 0, Float maxVal = 1);


    //## Other Operations (specified)
      //## Operation: getNextValue%373822B602DC
      RetCode getNextValue (Float *pValue);

    // Additional Protected Declarations
      //## begin BaseDistribution%36B1909403BA.protected preserve=yes
      //## end BaseDistribution%36B1909403BA.protected

  private:
    // Data Members for Associations

      //## Association: RandomVariableGeneration::<unnamed>%36B702970259
      //## Role: BaseDistribution::pBase%36B7029900FD
      //	A BaseGen object used as base to generate random numbers.
      //## begin BaseDistribution::pBase%36B7029900FD.role preserve=no  private: BaseGen {1 -> 1RHgAN}
      BaseGen *pBase;
      //## end BaseDistribution::pBase%36B7029900FD.role

    // Additional Private Declarations
      //## begin BaseDistribution%36B1909403BA.private preserve=yes
      //## end BaseDistribution%36B1909403BA.private

  private: //## implementation
    // Additional Implementation Declarations
      //## begin BaseDistribution%36B1909403BA.implementation preserve=yes
      //## end BaseDistribution%36B1909403BA.implementation

};

//## begin BaseDistribution%36B1909403BA.postscript preserve=yes
//## end BaseDistribution%36B1909403BA.postscript

// Class BaseDistribution 

//## begin module%36B1909403BA.epilog preserve=yes
} // namespace sch
//## end module%36B1909403BA.epilog


#endif
