
DROP TABLE IF EXISTS 'TBL_TEACHER'; 
CREATE TABLE 'TBL_TEACHER' (
 	`TEACHER_NAME`  TEXT NOT NULL,
 	`ONBOARD_DATE`  TEXT,
	`SIGNOFF`  INTEGER,
 	`SIGNOFF_DATE`  TEXT,
	`RANK`  INTEGER,
 	`PART_TIME`  INTEGER,
 	`PHONE`  TEXT,
	`MEMO` TEXT,
 	PRIMARY KEY ('TEACHER_NAME'));
-- -------------------------------------------------------------
DROP TABLE IF EXISTS 'TBL_REGULAR_CLASS'; 
CREATE TABLE 'TBL_REGULAR_CLASS' (
	`CLASS_NUMBER`  INTEGER NOT NULL,
 	`CLASS_WEEKDAY`  INTEGER NOT NULL,
 	`TEACHER_NAME`  TEXT NOT NULL,
 	`CLASS_NAME`  TEXT NOT NULL,
 	`PRACTICE`  INTEGER,
	`MEMO`	TEXT,
	PRIMARY KEY ('CLASS_NUMBER', 'CLASS_WEEKDAY', 'TEACHER_NAME'),
 	FOREIGN KEY('TEACHER_NAME') REFERENCES TBL_TEACHER('TEACHER_NAME') 
		ON DELETE RESTRICT ON UPDATE CASCADE
 	);
-- -------------------------------------------------------------
DROP TABLE IF EXISTS 'TBL_REGULAR_CLASS_STUDENT';
CREATE TABLE 'TBL_REGULAR_CLASS_STUDENT'  (
	`CLASS_NUMBER`  INTEGER NOT NULL,
 	`CLASS_WEEKDAY`  INTEGER NOT NULL,
 	`TEACHER_NAME`  TEXT NOT NULL,
	`STUDENT_NAME`  TEXT NOT NULL,
	`CLASS_FEE`     INTEGER NOT NULL, -- 该学生本次课程收费标准 2012-8-1
	`MEMO`	TEXT,
	UNIQUE ('CLASS_NUMBER', 'CLASS_WEEKDAY', 'STUDENT_NAME'),
	UNIQUE ('CLASS_NUMBER', 'CLASS_WEEKDAY', 'TEACHER_NAME', 'STUDENT_NAME'),
	FOREIGN KEY('CLASS_NUMBER', 'CLASS_WEEKDAY', 'TEACHER_NAME') 
		REFERENCES TBL_REGULAR_CLASS('CLASS_NUMBER', 'CLASS_WEEKDAY', 'TEACHER_NAME') 
		ON DELETE RESTRICT ON UPDATE CASCADE,
	FOREIGN KEY('STUDENT_NAME') REFERENCES TBL_STUDENT('STUDENT_NAME')
		ON DELETE RESTRICT ON UPDATE CASCADE
	);
-- -------------------------------------------------------------
DROP TABLE IF EXISTS 'TBL_CALENDAR_CLASS'; 
CREATE TABLE 'TBL_CALENDAR_CLASS' (
	`CLASS_DATE`  TEXT NOT NULL,
	`CLASS_NUMBER`  INTEGER NOT NULL,
 	`TEACHER_NAME`  TEXT NOT NULL,
 	`CLASS_NAME`  TEXT NOT NULL,
 	`PRACTICE`  INTEGER,
	`ONESHOT`  INTEGER,
	`MEMO`	TEXT,
	PRIMARY KEY ('CLASS_DATE', 'CLASS_NUMBER', 'TEACHER_NAME'),
 	FOREIGN KEY('TEACHER_NAME') REFERENCES TBL_TEACHER('TEACHER_NAME') 
		ON DELETE RESTRICT ON UPDATE CASCADE
	);
-- -------------------------------------------------------------
DROP TABLE IF EXISTS 'TBL_CALENDAR_CLASS_STUDENT';
CREATE TABLE 'TBL_CALENDAR_CLASS_STUDENT' (
	`CLASS_DATE`  TEXT NOT NULL,
	`CLASS_NUMBER`  INTEGER NOT NULL,
 	`TEACHER_NAME`  TEXT NOT NULL,
	`STUDENT_NAME`  TEXT NOT NULL,
	`LEAVE`  INTEGER,
	`CLASS_FEE`  INTEGER NOT NULL, -- 该学生本节课实际收费 2012-8-1
	`MEMO`	TEXT,
	UNIQUE ('CLASS_DATE', 'CLASS_NUMBER', 'STUDENT_NAME'),
	UNIQUE ('CLASS_DATE', 'CLASS_NUMBER', 'TEACHER_NAME', 'STUDENT_NAME'),
	FOREIGN KEY('CLASS_DATE', 'CLASS_NUMBER', 'TEACHER_NAME') 
		REFERENCES TBL_CALENDAR_CLASS('CLASS_DATE', 'CLASS_NUMBER', 'TEACHER_NAME') 
		ON DELETE RESTRICT ON UPDATE CASCADE,
	FOREIGN KEY('STUDENT_NAME') REFERENCES TBL_STUDENT('STUDENT_NAME')
		ON DELETE RESTRICT ON UPDATE CASCADE	
	);
-- -------------------------------------------------------------
-- 2012-8-1新增：学生信息
DROP TABLE IF EXISTS 'TBL_STUDENT';
CREATE TABLE 'TBL_STUDENT' (
	`STUDENT_NAME`  TEXT NOT NULL,
	`SIGNON_DATE`   TEXT,
	`SIGNOFF`  INTEGER,
 	`SIGNOFF_DATE`  TEXT,
	`PHONE`  TEXT,
	`PHONE2` TEXT,
	`ADDRESS` TEXT,
	`BIRTH_DATE` TEXT,
	`AGE` INTEGER,
	`SPECIALTY` TEXT,
	`MEMO` TEXT,
	PRIMARY KEY ('STUDENT_NAME')
	);

-- 2012-8-12新增：每日课表确认
DROP TABLE IF EXISTS 'TBL_CALENDAR_CLASS_LOCK';
CREATE TABLE 'TBL_CALENDAR_CLASS_LOCK' (
	LOCK_DATE TEXT NOT NULL,
	LOCK_BY TEXT NOT NULL,
	PRIMARY KEY ('LOCK_DATE')
);

DROP VIEW IF EXISTS V_CALENDAR_CLASS;
CREATE VIEW V_CALENDAR_CLASS AS SELECT 
	TBL_CALENDAR_CLASS.CLASS_DATE AS CLASS_DATE,
	TBL_CALENDAR_CLASS.CLASS_NUMBER AS CLASS_NUMBER,
	TBL_CALENDAR_CLASS.TEACHER_NAME AS TEACHER_NAME,
	CLASS_NAME,
	PRACTICE,
	ONESHOT,
	STUDENT_NAME,
	LEAVE,
	CLASS_FEE 
	FROM TBL_CALENDAR_CLASS,TBL_CALENDAR_CLASS_STUDENT WHERE
	TBL_CALENDAR_CLASS.CLASS_DATE = TBL_CALENDAR_CLASS_STUDENT.CLASS_DATE AND
	TBL_CALENDAR_CLASS.CLASS_NUMBER = TBL_CALENDAR_CLASS_STUDENT.CLASS_NUMBER AND
	TBL_CALENDAR_CLASS.TEACHER_NAME = TBL_CALENDAR_CLASS_STUDENT.TEACHER_NAME;


ALTER TABLE TBL_STUDENT ADD COLUMN BALANCE INTEGER DEFAULT 0;

DROP TABLE IF EXISTS TBL_ACCOUNT;
CREATE TABLE TBL_ACCOUNT (
	STUDENT_NAME TEXT NOT NULL, -- 记账学员名
	TIMESTAMP TEXT NOT NULL, -- 交易时间
	LOCATION TEXT, -- 交易场所
	PAY_TYPE INTEGER, -- 付现 CASH 0 刷卡 CHARGE 1
	RECORD_TYPE INTEGER, -- 缴学费 DEPOSIT 0 退款 REFUND 1
	MONEY INTEGER NOT NULL,
	BALANCE INTEGER NOT NULL,
	MEMO TEXT,
	FOREIGN KEY (STUDENT_NAME) REFERENCES TBL_STUDENT (STUDENT_NAME) ON DELETE NO ACTION ON UPDATE CASCADE
);
DROP TABLE IF EXISTS TBL_ADMIN;
CREATE TABLE TBL_ADMIN (
	ADMIN_NAME TEXT NOT NULL,
	ADMIN_TYPE INTEGER NOT NULL, -- SUPER_USER 0 DIRECTOR 10 MANAGER 50 OPERATOR 99
	PASSWORD TEXT NOT NULL, -- MD5加密
	LOGIN_TIME TEXT,
	PHONE TEXT,
	MEMO TEXT,
	PRIMARY KEY (ADMIN_NAME)
);
DROP TABLE IF EXISTS TBL_LOG;
CREATE TABLE TBL_LOG (
	TIMESTAMP TEXT NOT NULL,
	LOG_LEVEL INTEGER NOT NULL, -- INFO 0 WARN 1 ERROR 2 FATAL 3
	LOG_WHO TEXT,
	MESSAGE TEXT
);
